{"ast":null,"code":"var _jsxFileName = \"/home/floweraura/code_repos/ecomm-search/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Search from './components/search/search';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst posts = [{\n  id: '1',\n  name: 'This first post is about React'\n}, {\n  id: '2',\n  name: 'This next post is about Preact'\n}, {\n  id: '3',\n  name: 'We have yet another React post!'\n}, {\n  id: '4',\n  name: 'This is the fourth and final post'\n}];\n\nconst filterPosts = (posts, query) => {\n  if (!query) {\n    return posts;\n  }\n\n  console.log(query);\n  return posts.filter(post => {\n    const postName = post.name.toLowerCase();\n    return postName.includes(query);\n  });\n};\n\nconst App = () => {\n  _s();\n\n  const searchurl = window.location.href;\n  const query = searchurl.split('=')[1].split('&')[0] || '';\n  console.log(query);\n  const [searchQuery, setSearchQuery] = useState(query || '');\n  const filteredPosts = filterPosts(posts, searchQuery);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.name\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"pXXt52WI/stnZiWWbi60P0ok4qk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/floweraura/code_repos/ecomm-search/src/App.js"],"names":["logo","Search","useState","posts","id","name","filterPosts","query","console","log","filter","post","postName","toLowerCase","includes","App","searchurl","window","location","href","split","searchQuery","setSearchQuery","filteredPosts","map"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CADY,EAEZ;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAFY,EAGZ;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAHY,EAIZ;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAJY,CAAd;;AAOA,MAAMC,WAAW,GAAG,CAACH,KAAD,EAAQI,KAAR,KAAkB;AACpC,MAAI,CAACA,KAAL,EAAY;AACR,WAAOJ,KAAP;AACH;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAOJ,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAU;AAC1B,UAAMC,QAAQ,GAAGD,IAAI,CAACN,IAAL,CAAUQ,WAAV,EAAjB;AACA,WAAOD,QAAQ,CAACE,QAAT,CAAkBP,KAAlB,CAAP;AACH,GAHM,CAAP;AAID,CATD;;AAWA,MAAMQ,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,SAAS,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAlC;AAEA,QAAMZ,KAAK,GAAGS,SAAS,CAACI,KAAV,CAAgB,GAAhB,EAAqB,CAArB,EAAwBA,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,KAAyC,EAAvD;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAACK,KAAK,IAAI,EAAV,CAA9C;AACA,QAAMgB,aAAa,GAAGjB,WAAW,CAACH,KAAD,EAAOkB,WAAP,CAAjC;AAEA,sBACI;AAAA,4BACI,QAAC,MAAD;AACE,MAAA,WAAW,EAAEA,WADf;AAEE,MAAA,cAAc,EAAEC;AAFlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,gBACKC,aAAa,CAACC,GAAd,CAAmBb,IAAD,iBACjB;AAAA,kBAAmBA,IAAI,CAACN;AAAxB,SAASM,IAAI,CAACP,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADL;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD,CAtBD;;GAAMW,G;;KAAAA,G;AAwBN,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Search from './components/search/search';\nimport { useState } from 'react';\n\nconst posts = [\n  { id: '1', name: 'This first post is about React' },\n  { id: '2', name: 'This next post is about Preact' },\n  { id: '3', name: 'We have yet another React post!' },\n  { id: '4', name: 'This is the fourth and final post' },\n];\n\nconst filterPosts = (posts, query) => {\n  if (!query) {\n      return posts;\n  }\n  console.log(query)\n  return posts.filter((post) => {\n      const postName = post.name.toLowerCase();\n      return postName.includes(query);\n  });\n};\n\nconst App = () => {\n\n  const searchurl = window.location.href;\n  \n  const query = searchurl.split('=')[1].split('&')[0] || ''\n  console.log(query)\n  const [searchQuery, setSearchQuery] = useState(query || '');\n  const filteredPosts = filterPosts(posts,searchQuery)\n\n  return (\n      <div>\n          <Search \n            searchQuery={searchQuery}\n            setSearchQuery={setSearchQuery}\n          />\n          <ul>\n              {filteredPosts.map((post) => (\n                <li key={post.id}>{post.name}</li>\n              ))}\n          </ul>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}